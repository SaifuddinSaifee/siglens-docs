"use strict";(self.webpackChunksiglens_docs=self.webpackChunksiglens_docs||[]).push([[7026],{8197:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var i=s(5893),t=s(1151);const r={},o="Splunk-HEC-Metrics",c={id:"log-ingestion/vector/vector-splunk-hec-metrics",title:"Splunk-HEC-Metrics",description:"- SigLens is compatible with the Splunk-hec-metrics plugin for vector. Install vector and start it. Learn more about installation here.",source:"@site/docs/log-ingestion/vector/vector-splunk-hec-metrics.md",sourceDirName:"log-ingestion/vector",slug:"/log-ingestion/vector/vector-splunk-hec-metrics",permalink:"/siglens-docs/log-ingestion/vector/vector-splunk-hec-metrics",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Splunk-HEC-Logs",permalink:"/siglens-docs/log-ingestion/vector/vector-splunk-hec-logs"},next:{title:"Beats",permalink:"/siglens-docs/category/beats"}},l={},a=[{value:"Vector Configuration",id:"vector-configuration",level:2},{value:"Sources",id:"sources",level:3},{value:"Example Sources",id:"example-sources",level:4},{value:"Transforms",id:"transforms",level:3},{value:"Sinks",id:"sinks",level:3},{value:"Example Sink: Splunk HEC Logs",id:"example-sink-splunk-hec-logs",level:4},{value:"Sample Configuration",id:"sample-configuration",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"splunk-hec-metrics",children:"Splunk-HEC-Metrics"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["SigLens is compatible with the Splunk-hec-metrics plugin for vector. Install vector and start it. Learn more about ",(0,i.jsx)(n.a,{href:"./vector-install",children:"installation here"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Make sure that the ",(0,i.jsx)(n.code,{children:"endpoints"})," in the configuration has the ",(0,i.jsx)(n.code,{children:"/splunk"}),"suffix."]}),"\n",(0,i.jsxs)(n.li,{children:["Create a vector config file with the below ",(0,i.jsx)(n.a,{href:"#sample-configuration",children:"sample configuration"}),". Read more about ",(0,i.jsx)(n.a,{href:"#vector-configuration",children:"Vector Config file"})," below."]}),"\n",(0,i.jsxs)(n.li,{children:["Run the command: ",(0,i.jsx)(n.code,{children:"vector --config vector.yaml"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"vector-configuration",children:"Vector Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["For in-depth information on Vector configuration, visit the ",(0,i.jsx)(n.a,{href:"https://vector.dev/docs/reference/configuration/",children:"official Vector documentation"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Vector supports configuration files in ",(0,i.jsx)(n.code,{children:"YAML"}),", ",(0,i.jsx)(n.code,{children:"TOML"}),", and ",(0,i.jsx)(n.code,{children:"JSON"})," formats. Here we provide examples in ",(0,i.jsx)(n.code,{children:"YAML"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h3,{id:"sources",children:"Sources"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"sources"})," component in a Vector configuration specifies where Vector should collect data. This can be from files, servers, services, and other inputs. See the ",(0,i.jsx)(n.a,{href:"https://vector.dev/docs/reference/configuration/sources/",children:"supported source types"})," in Vector documentation."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h4,{id:"example-sources",children:"Example Sources"}),"\n",(0,i.jsxs)(n.p,{children:["Since the output sink is ",(0,i.jsx)(n.code,{children:"splunk_hec_metrics"}),", we can only give the input sources related to metrics. The sample configuration contains the source of nginx server."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"nginx_metrics"}),": Collects data from a specified Nginx server endpoint."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h3,{id:"transforms",children:"Transforms"}),"\n",(0,i.jsxs)(n.p,{children:["Transforms allow you to parse and transform data into the desired format. For more details, visit ",(0,i.jsx)(n.a,{href:"https://vector.dev/docs/reference/configuration/transforms/",children:"Vector transforms documentation"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h3,{id:"sinks",children:"Sinks"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"sinks"})," component defines the destination for data processed by Vector. It's the final stage of the data pipeline."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.h4,{id:"example-sink-splunk-hec-logs",children:"Example Sink: Splunk HEC Logs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"type"}),": Specifies the sink type, for instance, ",(0,i.jsx)(n.code,{children:"splunk_hec_metrics"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"inputs"}),": References the sources or transforms from which the sink should collect data."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"endpoint"}),": The ingestion endpoint for data. For Siglens' Splunk, the default ingestion port is ",(0,i.jsx)(n.code,{children:"8081"}),", with the ingestion route being ",(0,i.jsx)(n.code,{children:"/splunk"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Learn more about Splunk HEC Logs sink configuration in the ",(0,i.jsx)(n.a,{href:"https://vector.dev/docs/reference/configuration/sinks/splunk_hec_metrics/",children:"Vector sinks documentation"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# The directory used for persisting Vector state, such as on-disk buffers, file checkpoints, and more. Please make sure the Vector project has write permissions to this directory.\ndata_dir: /var/lib/vector\n\n# Sources Reference\nsources:\n  nginx_metrics:\n    type: 'nginx_metrics'\n    # A list of NGINX instances to scrape metrics from.\n    # Each endpoint must be a valid HTTP/HTTPS URI pointing to an NGINX instance that has the ngx_http_stub_status_module module enabled.\n    endpoints:\n      - 'http://127.0.0.1/nginx_status'\n    namespace: 'nginx'\n    # The interval in seconds to poll each endpoint.\n    scrape_interval_secs: 5\n\nsinks:\n  siglens:\n    type: splunk_hec_metrics\n    inputs:\n      - nginx_metrics\n    endpoint: http://localhost:8081/splunk/\n    compression: none\n    default_namespace: 'nginx' # Corrected spelling here\n    default_token: 'A94A8FE5CCB19BA61C4C08'\n    host_key: hostname\n    index: 'ind-nginx'\n    source: 'nginx_metrics'\n    sourcetype: 'nginx_metrics'\n    batch:\n      max_events: 1\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>c,a:()=>o});var i=s(7294);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);