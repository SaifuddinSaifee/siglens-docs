"use strict";(self.webpackChunksiglens_docs=self.webpackChunksiglens_docs||[]).push([[5664],{8436:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>I,contentTitle:()=>V,default:()=>q,frontMatter:()=>T,metadata:()=>E,toc:()=>N});var r=t(5893),s=t(1151),i=t(7294),a=t(6010),o=t(2466),l=t(6550),c=t(469),u=t(1980),d=t(7392),h=t(12);function m(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return m(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,d.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function f(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const r=(0,l.k6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,u._X)(s),(0,i.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=p(e),[a,o]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[l,u]=g({queryString:t,groupId:r}),[d,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,h.Nk)(t);return[r,(0,i.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),x=(()=>{const e=l??d;return f({value:e,tabValues:s})?e:null})();(0,c.Z)((()=>{x&&o(x)}),[x]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!f({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),m(e)}),[u,m,s]),tabValues:s}}var v=t(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function j(e){let{className:n,block:t,selectedValue:s,selectValue:i,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),r=l[t].value;r!==s&&(u(n),i(r))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,r.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>c.push(e),onKeyDown:h,onClick:d,...i,className:(0,a.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function _(e){let{lazy:n,children:t,selectedValue:s}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===s));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=x(e);return(0,r.jsxs)("div",{className:(0,a.Z)("tabs-container",b.tabList),children:[(0,r.jsx)(j,{...e,...n}),(0,r.jsx)(_,{...e,...n})]})}function k(e){const n=(0,v.Z)();return(0,r.jsx)(y,{...e,children:m(e.children)},String(n))}const w={tabItem:"tabItem_Ymn6"};function S(e){let{children:n,hidden:t,className:s}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.Z)(w.tabItem,s),hidden:t,children:n})}const T={},V="Elasticsearch",E={id:"log-ingestion/vector/vector-elasticsearch",title:"Elasticsearch",description:"- SigLens is compatible with the Elasticsearch plugin for vector. Install vector and start it. Learn more about installation here.",source:"@site/docs/log-ingestion/vector/vector-elasticsearch.md",sourceDirName:"log-ingestion/vector",slug:"/log-ingestion/vector/vector-elasticsearch",permalink:"/siglens-docs/log-ingestion/vector/vector-elasticsearch",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Install Vector",permalink:"/siglens-docs/log-ingestion/vector/vector-install"},next:{title:"Splunk-HEC-Logs",permalink:"/siglens-docs/log-ingestion/vector/vector-splunk-hec-logs"}},I={},N=[{value:"Vector Configuration",id:"vector-configuration",level:2},{value:"Sources",id:"sources",level:3},{value:"Example Sources",id:"example-sources",level:4},{value:"Transforms",id:"transforms",level:3},{value:"Sinks",id:"sinks",level:3},{value:"Example Sink: Elasticsearch",id:"example-sink-elasticsearch",level:4},{value:"Sample Configuration",id:"sample-configuration",level:2}];function C(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"elasticsearch",children:"Elasticsearch"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["SigLens is compatible with the Elasticsearch plugin for vector. Install vector and start it. Learn more about ",(0,r.jsx)(n.a,{href:"./vector-install",children:"installation here"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Make sure that the ",(0,r.jsx)(n.code,{children:"endpoints"})," in the configuration has the ",(0,r.jsx)(n.code,{children:"/elastic"})," suffix."]}),"\n",(0,r.jsxs)(n.li,{children:["Create a vector config file with the below ",(0,r.jsx)(n.a,{href:"#sample-configuration",children:"sample configuration"}),". Read more about ",(0,r.jsx)(n.a,{href:"#vector-configuration",children:"Vector Config file"})," below."]}),"\n",(0,r.jsxs)(n.li,{children:["Run the command: ",(0,r.jsx)(n.code,{children:"vector --config vector.yaml"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"vector-configuration",children:"Vector Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["For in-depth information on Vector configuration, visit the ",(0,r.jsx)(n.a,{href:"https://vector.dev/docs/reference/configuration/",children:"official Vector documentation"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Vector supports configuration files in ",(0,r.jsx)(n.code,{children:"YAML"}),", ",(0,r.jsx)(n.code,{children:"TOML"}),", and ",(0,r.jsx)(n.code,{children:"JSON"})," formats. Here we provide examples in ",(0,r.jsx)(n.code,{children:"YAML"})," and ",(0,r.jsx)(n.code,{children:"JSON"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"sources",children:"Sources"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"sources"})," component in a Vector configuration specifies where Vector should collect data. This can be from files, servers, services, and other inputs. See the ",(0,r.jsx)(n.a,{href:"https://vector.dev/docs/reference/configuration/sources/",children:"supported source types"})," in Vector documentation."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h4,{id:"example-sources",children:"Example Sources"}),"\n",(0,r.jsx)(n.p,{children:"The below config will contain the setup about these sources."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"demo_logs"}),": Generates sample logs in a specified format."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nginx_metrics"}),": Collects data from a specified Nginx server endpoint."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"file"}),": Reads and monitors data from a file system."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"transforms",children:"Transforms"}),"\n",(0,r.jsxs)(n.p,{children:["Transforms allow you to parse and transform data into the desired format. For more details, visit ",(0,r.jsx)(n.a,{href:"https://vector.dev/docs/reference/configuration/transforms/",children:"Vector transforms documentation"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h3,{id:"sinks",children:"Sinks"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"sinks"})," component defines the destination for data processed by Vector. It's the final stage of the data pipeline."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.h4,{id:"example-sink-elasticsearch",children:"Example Sink: Elasticsearch"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"type"}),": Specifies the sink type, for instance, ",(0,r.jsx)(n.code,{children:"elasticsearch"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"inputs"}),": References the sources or transforms from which the sink should collect data."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"endpoint"}),": The ingestion endpoint for data. For Siglens' Elasticsearch, the default ingestion port is ",(0,r.jsx)(n.code,{children:"8081"}),", with the ingestion route being ",(0,r.jsx)(n.code,{children:"/elastic"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Additional parameters for sinks, such as request parameters, are optional. Learn more about Elasticsearch sink configuration in the ",(0,r.jsx)(n.a,{href:"https://vector.dev/docs/reference/configuration/sinks/elasticsearch/",children:"Vector sinks documentation"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"sample-configuration",children:"Sample Configuration"}),"\n","\n","\n",(0,r.jsx)("html",{children:(0,r.jsxs)(k,{defaultValue:"yaml",values:[{label:"YAML",value:"yaml"},{label:"JSON",value:"json"}],children:[(0,r.jsx)(S,{value:"yaml",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"# The directory used for persisting Vector state, such as on-disk buffers, file checkpoints, and more. Please make sure the Vector project has write permissions to this directory.\ndata_dir: /var/lib/vector\n\n# Sources Reference\nsources:\n  # The type: \"demo_logs\" will generate apache_common logs\n  generate_apache_common:\n    type: 'demo_logs'\n    format: 'apache_common'\n    count: 50\n    interval: 1\n    lines:\n      - line1\n\n  # The type: \"demo_logs\" will generate syslog logs\n  generate_syslog:\n    type: 'demo_logs'\n    format: 'syslog'\n    count: 12\n\n  nginx_metrics:\n    type: 'nginx_metrics'\n    # A list of NGINX instances to scrape metrics from.\n    # Each endpoint must be a valid HTTP/HTTPS URI pointing to an NGINX instance that has the ngx_http_stub_status_module module enabled.\n    endpoints:\n      - 'http://127.0.0.1/nginx_status'\n    namespace: 'nginx'\n    # The interval in seconds to poll each endpoint.\n    scrape_interval_secs: 5\n\n  # The type: \"file\" will read the data from the file\n  read_from_file:\n    type: file\n    include:\n      - /mnt/d/Siglens/SplunkExport.json\n    read_from: beginning\n\n# Transforms Reference: Transform the data from Sources into desired format\ntransforms:\n  remap_file_log:\n    inputs:\n      - 'read_from_file'\n    type: 'remap'\n    # The path to the file containing the remap rules. Parsing the message which is the data read from the file.\n    # The parsed json is stored in the structured variable. The structured variable is merged with the other data/fields.\n    source: |\n      structured = parse_json!(.message)\n      ., err = merge(., structured)\n\n# Sinks Reference: Ingest the data from Sources to Siglens Sink\nsinks:\n  siglens:\n    # The request parameters are optional.\n    request:\n      concurrency: 'adaptive'\n      rate_limit_duration_secs: 1\n      rate_limit_num: 10\n      retry_attempts: 3\n    type: 'elasticsearch'\n    # The inputs sources name to ingest the data. This is a list of sources. You can add multiple sources.\n    inputs:\n      - 'remap_file_log'\n      #- \"nginx_metrics\"\n      - 'generate_apache_common'\n      #- \"generate_syslog\"\n    # The ingestion endpoint of Siglens\n    endpoints:\n      - http://localhost:8081/elastic/\n    id_key: hostname\n    compression: none\n    mode: bulk\n    query:\n      X-Powered-By: Vector\n    healthcheck:\n      enabled: false\n"})})}),(0,r.jsx)(S,{value:"json",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "data_dir": "/var/lib/vector",\n  "sources": {\n      "generate_apache_common": {\n          "type": "demo_logs",\n          "format": "apache_common",\n          "count": 50,\n          "interval": 1,\n          "lines": [\n              "line1"\n          ]\n      },\n      "generate_syslog": {\n          "type": "demo_logs",\n          "format": "syslog",\n          "count": 12\n      },\n      "nginx_metrics": {\n          "type": "nginx_metrics",\n          "endpoints": [\n              "http://3.139.99.91/nginx_status"\n          ],\n          "namespace": "nginx",\n          "scrape_interval_secs": 5\n      },\n      "read_from_file": {\n          "type": "file",\n          "include": [\n              "./migration1/SplunkExport.json"\n          ],\n          "read_from": "beginning"\n      }\n  },\n  "transforms": {\n      "remap_file_log": {\n          "inputs": [\n              "read_from_file"\n          ],\n          "type": "remap",\n          "source": "structured = parse_json!(.message) ., err = merge(., structured)"\n      }\n  },\n  "sinks": {\n      "siglens": {\n          "request": {\n              "concurrency": "adaptive",\n              "rate_limit_duration_secs": 1,\n              "rate_limit_num": 10,\n              "retry_attempts": 3\n          },\n          "type": "elasticsearch",\n          "inputs": [\n              "nginx_metrics"\n          ],\n          "endpoints": [\n              "http://localhost:8081/elastic/"\n          ],\n          "id_key": "hostname",\n          "compression": "none",\n          "mode": "bulk",\n          "query": {\n              "X-Powered-By": "Vector"\n          },\n          "healthcheck": {\n              "enabled": false\n          }\n      }\n  }\n}\n'})})})]})})]})}function q(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(C,{...e})}):C(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var r=t(7294);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);