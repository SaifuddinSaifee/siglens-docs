"use strict";(self.webpackChunksiglens_docs=self.webpackChunksiglens_docs||[]).push([[320],{9466:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>p,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=n(5893),r=n(1151);const o={},p="Python App",i={id:"instrument-traces/python-app",title:"Python App",description:"Auto-instrument sample Python app for traces",source:"@site/docs/instrument-traces/python-app.md",sourceDirName:"instrument-traces",slug:"/instrument-traces/python-app",permalink:"/siglens-docs/instrument-traces/python-app",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Java App",permalink:"/siglens-docs/instrument-traces/java-app"},next:{title:"Logs",permalink:"/siglens-docs/logs"}},a={},l=[{value:"Auto-instrument sample Python app for traces",id:"auto-instrument-sample-python-app-for-traces",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Set up for Python application",id:"set-up-for-python-application",level:3},{value:"Auto instrumentation setup for python app",id:"auto-instrumentation-setup-for-python-app",level:3}];function c(e){const t={code:"code",h1:"h1",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"python-app",children:"Python App"}),"\n",(0,s.jsx)(t.h3,{id:"auto-instrument-sample-python-app-for-traces",children:"Auto-instrument sample Python app for traces"}),"\n",(0,s.jsx)(t.p,{children:"In this tutorial we will go through the steps to auto instrument a Python app to send traces to Siglens."}),"\n",(0,s.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Siglens instance should be running on localhost with ingest port-4318. To do so you need to change the ingest port of Siglens to ",(0,s.jsx)(t.code,{children:"4318"})," in ",(0,s.jsx)(t.code,{children:"server.yaml"})]}),"\n",(0,s.jsx)(t.li,{children:"Python app (refer the documentation below if you don't have the setup for go app)"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"set-up-for-python-application",children:"Set up for Python application"}),"\n",(0,s.jsx)(t.p,{children:"Let's start by setting up our example application. This application will be a simple server that, when accessed, will respond with the message 'Web App with Python Flask!'."}),"\n",(0,s.jsx)(t.p,{children:"To begin, set up an environment in a new directory:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"mkdir python-hello-world-otel\ncd python-hello-world-otel\npython3 -m venv venv\nsource ./venv/bin/activate\n"})}),"\n",(0,s.jsx)(t.p,{children:"Now install Flask:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"pip install 'flask<3' 'werkzeug<3'\n"})}),"\n",(0,s.jsx)(t.p,{children:"Create a file server.py and add the following code to it:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"from flask import Flask\n \napp = Flask(__name__)\n \n@app.route('/')\ndef index():\n    return 'Web App with Python Flask!'\n \napp.run(host='0.0.0.0', port=81)\n"})}),"\n",(0,s.jsx)(t.p,{children:"Run the application using following command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"python3 server.py\n"})}),"\n",(0,s.jsxs)(t.p,{children:["You can now access the running app at ",(0,s.jsx)(t.code,{children:"http://localhost:81"}),":"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"py-app",src:n(8754).Z+"",width:"2179",height:"956"})}),"\n",(0,s.jsx)(t.h3,{id:"auto-instrumentation-setup-for-python-app",children:"Auto instrumentation setup for python app"}),"\n",(0,s.jsx)(t.p,{children:"We have to install all OpenTelemetry components that are required to auto-instrument our app:"}),"\n",(0,s.jsx)(t.p,{children:"Install the opentelemetry-distro package, which contains the OpenTelemetry API, SDK and also the tools opentelemetry-bootstrap and opentelemetry-instrument you will use below"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"pip install opentelemetry-distro\n"})}),"\n",(0,s.jsx)(t.p,{children:"Then run this command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"pip install Iv protobuf==3.20.1 \n"})}),"\n",(0,s.jsx)(t.p,{children:"Run the opentelemetry-bootstrap command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"opentelemetry-bootstrap --action=install \n"})}),"\n",(0,s.jsx)(t.p,{children:"Now, we need to install the OpenTelemetry exporter:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"pip install opentelemetry-exporter-otlp\npip install opentelemetry-exporter-otlp-proto-http\n"})}),"\n",(0,s.jsx)(t.p,{children:"Run the following command in terminal to enable auto instrumentation of the application"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'OTEL_TRACES_EXPORTER=otlp OTEL_METRICS_EXPORTER=none \nOTEL_EXPORTER_OTLP_TRACES_ENDPOINT="http://localhost:4318/otlp/v1/traces" \nOTEL_EXPORTER_OTLP_PROTOCOL="http/protobuf" OTEL_RESOURCE_ATTRIBUTES=service.name=python-app opentelemetry-instrument python3 server.py\n'})}),"\n",(0,s.jsxs)(t.p,{children:["The application gets started on ",(0,s.jsx)(t.code,{children:"http://localhost:81"}),". Refresh the page to trigger our app to generate and emit a trace of that transaction (repeat that a few times to generate sample traces)."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"terminal-py-app",src:n(380).Z+"",width:"2880",height:"444"})}),"\n",(0,s.jsx)(t.p,{children:"You can search traces:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"search-traces-py",src:n(3034).Z+"",width:"2880",height:"1630"})}),"\n",(0,s.jsx)(t.p,{children:"You can view red-metrics traces:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"siglens-py-app",src:n(1906).Z+"",width:"2875",height:"1625"})}),"\n",(0,s.jsx)(t.p,{children:"Graph visualization of red-metrics:"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"graph-1-py",src:n(6321).Z+"",width:"2877",height:"1627"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"graph-2-py",src:n(556).Z+"",width:"2877",height:"1630"})})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},6321:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/metrics-graph-1-py-d3a5cdeb74a7857603d7c67cae628eeb.png"},556:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/metrics-graph-2-py-7ae58c0f44d732a26a1c2e5727261497.png"},1906:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/metrics-python-9a55068c4779f5db2e53f23bd1fd5ad6.png"},8754:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/python-app-c3fa704f7cdc141b4ba402e51f5e6b50.png"},3034:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/search-traces-py-0ad01226d5fe064cc2926951ae97030b.png"},380:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/terminal-python-409f5f56051d6034a9e445f54bef8a4b.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>p});var s=n(7294);const r={},o=s.createContext(r);function p(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:p(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);