"use strict";(self.webpackChunksiglens_docs=self.webpackChunksiglens_docs||[]).push([[3337],{2247:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=n(5893),s=n(1151);const o={},i=".Net App",a={id:"instrument-traces/dotnet-app",title:".Net App",description:"Auto-instrument sample Dotnet App for traces",source:"@site/docs/instrument-traces/dotnet-app.md",sourceDirName:"instrument-traces",slug:"/instrument-traces/dotnet-app",permalink:"/instrument-traces/dotnet-app",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Python App",permalink:"/instrument-traces/python-app"},next:{title:"Javascript App",permalink:"/instrument-traces/js-app"}},p={},c=[{value:"Auto-instrument sample Dotnet App for traces",id:"auto-instrument-sample-dotnet-app-for-traces",level:3},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Set up for .Net application",id:"set-up-for-net-application",level:3},{value:"Auto instrumentation setup for .NET app",id:"auto-instrumentation-setup-for-net-app",level:3}];function d(e){const t={a:"a",br:"br",code:"code",h1:"h1",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"net-app",children:".Net App"}),"\n",(0,r.jsx)(t.h3,{id:"auto-instrument-sample-dotnet-app-for-traces",children:"Auto-instrument sample Dotnet App for traces"}),"\n",(0,r.jsx)(t.p,{children:"In this tutorial we will go through the steps to auto instrument a .Net app to send traces to Siglens."}),"\n",(0,r.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["Siglens instance should be running on localhost with ingest port-4318. To do so you need to change the ingest port of Siglens to ",(0,r.jsx)(t.code,{children:"4318"})," in ",(0,r.jsx)(t.code,{children:"server.yaml"})]}),"\n",(0,r.jsx)(t.li,{children:".Net app (refer the documentation below if you don't have the setup for .Net app)"}),"\n",(0,r.jsxs)(t.li,{children:["To begin with the setup of .NET app you must have .NET SDK installed locally. You can download it from ",(0,r.jsx)(t.a,{href:"https://dotnet.microsoft.com/en-us/download/dotnet",children:"here"})]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"set-up-for-net-application",children:"Set up for .Net application"}),"\n",(0,r.jsx)(t.p,{children:"To begin, set up an environment in a new directory called dotnet-app. Within that directory, execute following command:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"dotnet new web\n"})}),"\n",(0,r.jsxs)(t.p,{children:["You will get a sample code in ",(0,r.jsx)(t.code,{children:"Program.cs"})," file"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'var builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\napp.MapGet("/", () => "Hello World!");\n\napp.Run();\n'})}),"\n",(0,r.jsx)(t.p,{children:"Build and run the application with the following command:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"dotnet build\ndotnet run\n"})}),"\n",(0,r.jsxs)(t.p,{children:["In the Properties subdirectory, inside ",(0,r.jsx)(t.code,{children:"launchSettings.json"})," you will get the url for the application:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'"profiles": {\n    "http": {\n      "commandName": "Project",\n      "dotnetRunMessages": true,\n      "launchBrowser": true,\n      "applicationUrl": "http://localhost:5234",\n      "environmentVariables": {\n        "ASPNETCORE_ENVIRONMENT": "Development"\n      }\n    },\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["You can see ",(0,r.jsx)(t.code,{children:"Hello World!"})," message when you access the url ",(0,r.jsx)(t.code,{children:"http://localhost:5234"}),":"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"dotnet",src:n(8977).Z+"",width:"1153",height:"620"})}),"\n",(0,r.jsx)(t.h3,{id:"auto-instrumentation-setup-for-net-app",children:"Auto instrumentation setup for .NET app"}),"\n",(0,r.jsxs)(t.p,{children:["To automatically instrument the application with OpenTelemetry .NET we use the  ",(0,r.jsx)(t.code,{children:"OpenTelemetry.AutoInstrumentation"})," package."]}),"\n",(0,r.jsxs)(t.p,{children:["To automatically create traces the ",(0,r.jsx)(t.code,{children:"OpenTelemetry.Instrumentation.AspNetCore"})," package is used for incoming ASP.NET Core requests."]}),"\n",(0,r.jsx)(t.p,{children:"Install the following dependencies:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"dotnet add package OpenTelemetry\ndotnet add package OpenTelemetry.Exporter.OpenTelemetryProtocol \ndotnet add package OpenTelemetry.Extensions.Hosting\ndotnet add package OpenTelemetry.Instrumentation.Runtime\ndotnet add package OpenTelemetry.Instrumentation.AspNetCore \ndotnet add package OpenTelemetry.AutoInstrumentation\n"})}),"\n",(0,r.jsx)(t.p,{children:"In the Program.cs file, we add OpenTelemetry as a service and configure the following variables:"}),"\n",(0,r.jsxs)(t.p,{children:["serviceName - Name of the service.",(0,r.jsx)(t.br,{}),"\n","otlpOptions.Endpoint - Endpoint for sending traces to Siglens- ",(0,r.jsx)(t.code,{children:"http://localhost:4318/otlp/v1/traces"})]}),"\n",(0,r.jsxs)(t.p,{children:["Given below is the updated ",(0,r.jsx)(t.code,{children:"Program.cs"})," file with the configured variables:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'using System.Diagnostics;\nusing OpenTelemetry.Exporter;\nusing OpenTelemetry.Resources;\nusing OpenTelemetry.Trace;\n\nvar builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddOpenTelemetry()\n    .ConfigureResource(resource => \n        resource.AddService(serviceName: "sample-net-app"))\n    .WithTracing(tracing => tracing\n        .AddAspNetCoreInstrumentation()\n        .AddConsoleExporter()\n        .AddOtlpExporter(otlpOptions =>\n        {\n                        \n            otlpOptions.Endpoint = new Uri("http://localhost:4318/otlp/v1/traces");\n            otlpOptions.Protocol = OtlpExportProtocol.HttpProtobuf;\n        \n        }));\n\nvar app = builder.Build();\n\napp.MapGet("/", () => $"Hello World! OpenTelemetry Trace: {Activity.Current?.Id}");\napp.Run();\n'})}),"\n",(0,r.jsx)(t.p,{children:"Now run the application:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"dotnet build\ndotnet run\n"})}),"\n",(0,r.jsxs)(t.p,{children:["The application gets started on ",(0,r.jsx)(t.code,{children:"http://localhost:5234"}),". Refresh the page to trigger our app to generate and emit a trace of that transaction (repeat that a few times to generate sample traces)."]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"dotnet-app",src:n(8286).Z+"",width:"1417",height:"665"})}),"\n",(0,r.jsx)(t.p,{children:"You can search traces:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"search-dotnet",src:n(4555).Z+"",width:"2880",height:"1630"})}),"\n",(0,r.jsx)(t.p,{children:"You can view red-metrics:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"metrics-dotnet",src:n(4202).Z+"",width:"2870",height:"1627"})}),"\n",(0,r.jsx)(t.p,{children:"Graph visualization of red-metrics:"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"dotnet-graph-1",src:n(3938).Z+"",width:"2865",height:"1599"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"dotnet-graph-2",src:n(5577).Z+"",width:"2864",height:"1600"})})]})}function l(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8286:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/dotnet-app-op-93b2ea6914649545788dfd7c1cedd13e.png"},8977:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/dotnet-app-88bc29aa4504f70701b4992a3fcaf0d6.png"},3938:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/dotnet-graph-1-024cf336abe9480772a5d33dfd4d2765.png"},5577:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/dotnet-graph-2-7aa6284df473b1618b433fa9643c8075.png"},4202:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/dotnet-metrics-c50b532a944386cc6fbb521bb21c5d8c.png"},4555:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/dotnet-search-4d2eb8917a1b67c1de22a622a5e6e845.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>i});var r=n(7294);const s={},o=r.createContext(s);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);